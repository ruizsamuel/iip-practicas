#BlueJ class context
comment0.target=Polygon
comment0.text=\r\n\ Clase\ Polygon.\ Poligonos\ solidos\ (de\ un\ determinado\ color)\ en\ el\ plano,\r\n\ dados\ por\ la\ secuencia\ de\ sus\ vertices.\r\n\ \r\n\ @author\ IIP\ -\ Practica\ 7\r\n\ @version\ Curso\ 2021/22\r\n
comment1.params=x\ y
comment1.target=Polygon(double[],\ double[])
comment1.text=\r\n\ Construye\ un\ poligono\ a\ partir\ de\ un\ array\ x\ con\ las\r\n\ abcsisas\ x0,\ x1,\ x2,\ ...,\ xn-1\ de\ sus\ vertices,\ y\ un\ array\ y\r\n\ con\ las\ ordenadas\ y0,\ y1,\ y2,\ ...\ yn-1\ de\ sus\ vertices,\ n\ >\ 0.\r\n\ Los\ vertices\ definen\ un\ poligono\ cuyos\ lados\ se\ extienden\ de\ \r\n\ un\ vertice\ al\ siguiente,\ y\ cerrandose\ en\ (x0,y0).\r\n\ Por\ defecto,\ el\ poligono\ es\ de\ color\ azul\ (Color.BLUE).\r\n\ @param\ x\ double[],\ las\ abscisas.\r\n\ @param\ y\ double[],\ las\ ordenadas.\r\n
comment2.params=
comment2.target=java.awt.Color\ getColor()
comment2.text=\ Devuelve\ el\ color\ del\ poligono.\r\n\ \ @return\ Color,\ el\ color.\ \r\n
comment3.params=nC
comment3.target=void\ setColor(java.awt.Color)
comment3.text=\ Actualiza\ el\ color\ del\ poligono\ a\ un\ color\ dado.\r\n\ \ @param\ nC\ Color,\ el\ nuevo\ color.\r\n
comment4.params=
comment4.target=double[]\ verticesX()
comment4.text=\ Devuelve\ las\ abcisas\ de\ los\ vertices\ del\ poligono.\ \r\n\ \ @return\ double[],\ las\ abscisas\ de\ los\ vertices.\r\n
comment5.params=
comment5.target=double[]\ verticesY()
comment5.text=\ Devuelve\ las\ ordenadas\ de\ los\ vertices\ del\ poligono.\r\n\ \ @return\ double[],\ las\ ordenadas\ de\ los\ vertices.\ \r\n
comment6.params=incX\ incY
comment6.target=void\ translate(double,\ double)
comment6.text=\ Traslada\ los\ vertices\ del\ poligono\:\ \r\n\ \ incX\ en\ el\ eje\ X\ e\ incY\ en\ el\ eje\ Y.\r\n\ \ @param\ incX\ double,\ el\ incremento\ o\ decremento\ en\ X.\r\n\ \ @param\ incY\ double,\ el\ incremento\ o\ decremento\ en\ Y.\r\n
comment7.params=
comment7.target=double\ perimeter()
comment7.text=\ Devuelve\ el\ perimetro\ del\ poligono.\r\n\ \ @return\ double,\ el\ perimetro.\r\n
comment8.params=p
comment8.target=boolean\ inside(pract5.Point)
comment8.text=\ Comprueba\ si\ el\ Point\ p\ es\ interior\ al\ poligono.\r\n\ \ PRECONDICION\:\ p\ no\ esta\ sobre\ los\ lados\ del\ poligono.\r\n\ \ Si\ el\ punto\ es\ interior\ al\ poligono\ devuelve\ true;\ \r\n\ \ en\ caso\ contrario,\ devuelve\ false.\r\n\ \ @param\ p\ Point,\ el\ punto.\r\n\ \ @return\ boolean,\ true\ si\ el\ punto\ es\ interior\ o\ false\r\n\ \ si\ es\ exterior.\r\n
numComments=9
